Y <- c(0.000000,0.112250,0.119417,0.151970,0.177037,0.237350,0.259793,0.312057,0.332577,0.35449,0.391510)
X <- c(0.000000,9979.612441,10822.945775,21699.612441,36726.279108,78449.612441,94301.612441,131847.945775,146865.612441,162718.279108,191082.325775)
plot(X,Y)
plot(X,Y, type='l')
T <- X - 200000
T
9979.612441 - 200000
plot(T,Y, type= 'l')
T <- X - 191082.325775
T
plot(T,Y, type= 'l')
Y <- c(0.000000,0.112250,0.119417,0.151970,0.177037,0.237350,0.259793,0.312057,0.332577,0.35449,0.391510)
X <- c(-191082.33,-181102.71,-180259.38,-169382.71,-154356.05,-112632.71,-96780.71,-59234.38,-44216.71,-28364.05,0.00)
plot(X,Y,type='l')
Y/X
r <- c(0,1,2,3)
plot(X,Y,type='l', xlabel='Hi', ylabel='Bi')
plot(X,Y,type='l', xlab='Hi', ylab='Bi')
plot(X,Y,type='b', xlab='Hi', ylab='Bi')
X->c(60,120,180,240,300,360,420,480,540,600)
X <- c(60,120,180,240,300,360,420,480,540,600)
Y <- c(3.27826,11.3123,20.0415,26.7022,31.26,34.539,37.1367,39.3707,41.3955,43.2873)
plot(X,Y,type='l',xlab='Frequência(Hz)',ylab='Perda do ferro(W)')
Z<-c(2.9,5.8,8.7,11.6,14.5,17.4,20.3,23.2,26.1,29)
W<-c(3.27826,5.65617,6.6805,6.67555,6.25119,5.75649,5.30524,0,4.5995,4.32873)
plot(Z,W,type='l',xlab='Condutividade(MS/m)', ylab='Perda do ferro(W)')
W<-c(3.27826,5.65617,6.6805,6.67555,6.25119,5.75649,5.30524,4.92134,4.5995,4.32873)
plot(Z,W,type='l',xlab='Condutividade(MS/m)', ylab='Perda do ferro(W)')
# Chapter 4 routines
source('~/UFMG/7º Semestre/Modelos Estatísticos e Inferência/Design-and-Analysis-of-Experiments-master/04-StatisticalIntervals/Chapter04.R')
install ggplot2
install.packages("ggplot2")
source('~/UFMG/7º Semestre/Modelos Estatísticos e Inferência/Design-and-Analysis-of-Experiments-master/04-StatisticalIntervals/Chapter04.R')
source('~/UFMG/7º Semestre/Modelos Estatísticos e Inferência/Design-and-Analysis-of-Experiments-master/05-StatisticalInference/Chapter05.R')
2^2
source.with.encoding('C:/Users/Thais/Dropbox/Modelos Estatísticos/ec1.R', encoding='UTF-8')
source.with.encoding('C:/Users/Thais/Dropbox/Modelos Estatísticos/ec1.R', encoding='UTF-8')
source.with.encoding('C:/Users/Thais/Dropbox/Modelos Estatísticos/ec1.R', encoding='UTF-8')
source.with.encoding('C:/Users/Thais/Dropbox/Modelos Estatísticos/ec1.R', encoding='UTF-8')
source.with.encoding('C:/Users/Thais/Dropbox/Modelos Estatísticos/ec1.R', encoding='UTF-8')
source.with.encoding('C:/Users/Thais/Dropbox/Modelos Estatísticos/ec1.R', encoding='UTF-8')
source.with.encoding('C:/Users/Thais/Dropbox/Modelos Estatísticos/ec1.R', encoding='UTF-8')
dados
BMI
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8')
dados[0]/(dados[1].^2)
dados[0]/(dados[1]^2)
length(dados[0])
length(dados)
dados[0].length
length(dados(0))
length(dados(0,:))
length(dados(:,0))
length(dados[:,0])
dados(0)
dados[0]
dados[1]
BMI <- dados[1]/(dados[2]^2);
BMI
mean(BMI)
mean(BMI[1])
mean.as_matrix(BMI)
mean(as.matrix(BMI))
install.packages("TeachingDemos")
install.packages("TeachingDemos")
install.packages("TeachingDemos")
install.packages("TeachingDemos")
library("TeachingDemos")
updateR()
source('~/UFMG/7º Semestre/Modelos Estatísticos e Inferência/Design-and-Analysis-of-Experiments-master/05-StatisticalInference/Chapter05.R')
source('~/UFMG/7º Semestre/Modelos Estatísticos e Inferência/Design-and-Analysis-of-Experiments-master/05-StatisticalInference/Chapter05.R')
source('~/UFMG/7º Semestre/Modelos Estatísticos e Inferência/Design-and-Analysis-of-Experiments-master/05-StatisticalInference/Chapter05.R')
load("C:/Users/Thais/Documents/.RData")
library("TeachingDemos")
length(BMI)
source.with.encoding('C:/Users/Thais/Dropbox/Modelos Estatísticos/ec1.R', encoding='UTF-8')
BMI
source.with.encoding('C:/Users/Thais/Dropbox/Modelos Estatísticos/ec1.R', encoding='UTF-8')
library("TeachingDemos");
#Ler dados de entrada
dados <- read.table("data.csv", header=FALSE, sep=";");
#Cálculo do BMI
BMI <- dados[1]/(dados[2]^2);
#Média
x_bar <- mean(as.matrix(BMI));
BMI
length(BMI)
BMI.rows
rows(BMI)
size(BMI)
BMI.size
BMI.size()
alpha <- 0.05
t.test(BMI, mu=26.3, conf.level =0.95)
t.test(BMI, mu=26.3, conf.level =0.90)
t.test(BMI, mu=26.3, conf.level =0.50)
t.test(BMI, mu=26.3, conf.level =0.95)
t.test(BMI, mu=26.3, conf.level =0.99999999999)
t.test(BMI, mu=26.3, conf.level =0.99)
t.test(BMI, mu=26.3, conf.level =0.95)
sd(BMI)
sd(as.vector(BMI)
)
sd(as.vector(BMI))
sd(as.list(BMI))
BMi
BMI
BMI[1]
a<-(1,2,3)
a<-(1;2;3)
nrow(BMI)
BMI'
;
''''
as.vector(BMI)
a = [1;2;3;4]
a <- [1;2;3;4]
a <- (1;2;3;4)
a <- list(1;2;3;4)
a <- c(1,2,3,4)
a
t(BMI)
sd(t(BMI))
t <- qt(alpha/2, n-1);
t <- qt(alpha/2, 12);
t
t.test(BMI, mu=26.3, conf.level =0.95, alternative="greater")
alpha
t.test(BMI, mu=26.3, conf.level =0.95)
t.test(BMI, mu=26.3, conf.level =0.95, alternative="greater")
t.test(BMI, mu=26.3, conf.level =0.99, alternative="greater")
t.test(BMI, mu=26.3, conf.level =0.8-, alternative="greater")
t.test(BMI, mu=26.3, conf.level =0.8, alternative="greater")
t.test(BMI, mu=26.3, conf.level =0.7, alternative="greater")
t.test(BMI, mu=26.3, conf.level =0.95, alternative="greater")
alpha
t.test(BMI, mu=26.3, conf.level =0.95)
a <- t.test(BMI, mu=26.3, conf.level =0.95)
a
a.atomic
s
dados <- read.table("EngSis_weight_estXmeasure.csv", header=TRUE, sep=",");
setwd("~/UFMG/7º Semestre/Modelos Estatísticos e Inferência/modelos-estatisticos-inferencia-2016-1/ec3")
dados <- read.table("EngSis_weight_estXmeasure.csv", header=TRUE, sep=",");
dados
aggregate(dados$Measured.weight.kg~dados$Course, data=dados, FUN=mean)
aggregate(dados$Measured.weight.kg~dados$Course, data=dados, FUN=mean)
aggregate(dados$Measured.weight.kg~dados$Course, data=dados, FUN=mean)
aggregate(dados$Estimated.weight.kg~dados$Course, data=dados, FUN=mean)
a <- aggregate(dados$Measured.weight.kg~dados$Course, data=dados, FUN=mean)
b <- aggregate(dados$Estimated.weight.kg~dados$Course, data=dados, FUN=mean)
aggdata <- (a, b)
aggdata <- c(a, b)
aggdata
aggdata <- [a, b]
aggregate(dados$Measured.weight.kg~dados$Course, data=dados, FUN=mean)
dados
aggregate(dados$Measured.weight.kg~dados$Estimated.weight.kg, data=dados, FUN=mean)
data
dados
data = []
aggregate(dados$Measured.weight.kg~dados$Course, data=dados, FUN=mean)
b <- aggregate(dados$Estimated.weight.kg~dados$Course, data=dados, FUN=mean)
aggregate(dados$Estimated.weight.kg~dados$Course, data=dados, FUN=mean)
c <- a+b
c <- a,b
merge(a,b)
rbind(a,b)
a
b
c(a,b)
dados
for i= 1:11
for i=1:11
for i=1:11
for(i in seq(1:11))
;
for(i in seq(1:11)){}
for(i in seq(1:11)){}
dados <- read.table("dados.csv", header=TRUE, sep=",");
aggdata <- aggregate(dados$Peso~dados$Problema:dados$Fonte,data=dados,FUN=mean);
summary(aggdata)
aggdata <- aggregate(dados$Peso:dados$Fonte,data=dados,FUN=mean);
aggdata <- aggregate(dados$Peso~dados$Problema:dados$Fonte,data=dados,FUN=mean);
summary(aggdata)
t.test(dados$Peso~dados$Fonte, paired=T, data=aggdata)
aggdata <- aggregate(dados$Peso~dados$Fonte,data=dados,FUN=mean);
summary(aggdata)
#Ler dados de entrada
dados <- read.table("dados.csv", header=TRUE, sep=",");
aggdata <- aggregate(dados$Peso~dados$Problema:dados$Fonte,data=dados,FUN=mean);
summary(aggdata)
#Ler dados de entrada
dados <- read.table("dados.csv", header=TRUE, sep=",");
aggdata <- aggregate(dados$Peso~dados$Fonte,data=dados,FUN=mean);
summary(aggdata)
t.test(dados$Peso~dados$Fonte, paired=T, data=aggdata)
summary
summary(aggdata)
t.test(dados$Peso~dados$Fonte, paired=T, data=aggdata)
#Ler dados de entrada
dados <- read.table("dados.csv", header=TRUE, sep=",");
aggdata <- aggregate(dados$Peso~dados$Fonte,data=dados,FUN=mean);
summary(aggdata)
t.test(dados$Peso~dados$Fonte, paired=T, data=aggdata);
dados <- read.table("dados.csv", header=TRUE, sep=",");
aggdata <- aggregate(dados$Peso~dados$Fonte,data=dados,FUN=mean);
summary(aggdata)
t.test(dados$Peso~dados$Fonte, paired=T, data=aggdata);
###########################################
source.with.encoding('~/UFMG/7º Semestre/Modelos Estatísticos e Inferência/modelos-estatisticos-inferencia-2016-1/ec3/ec3.R', encoding='UTF-8')
boxplot(estimados, medidos, ylab="Peso (kg)",
names=c("Estimados","Medidos"), col = "lightgray",
main="Pesos Estimados e Medidos em Balança");
diffPesos <- estimados - medidos;
boxplot(diffPesos, ylab="Peso (kg)",
names=c("Diferença"), col = "lightgray",
main="Diferença dos Pesos Estimados e Medidos");
t.test(dados$Peso~dados$Fonte, paired=T, data=aggdata);
install.packages('car')
#5. Conclusão
title: "Estudo de caso 3: Emparelhamento de dados"
date: "25 de abril de 2016"
